name : CI
on: 
  push:
    branches:
      - main
jobs:
  depchecktest:
    runs-on: ubuntu-latest
    steps: 
      - name: Checkout Code
        uses: actions/checkout@v4
      - name: Depcheck
        uses: dependency-check/Dependency-Check_Action@1.0.0
        id: Depcheck
        with:
          project: 'petclinic'
          path: '.'
          format: 'HTML'
      - name : Upload test results
        uses: actions/upload-artifact@v4
        with:
          name: Depcheck-report
          path: ${{github.workspace}}/reports
  
  build-deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name : Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17' 
          distribution: 'temurin'
          
      - name: Run Unit Tests
        run: mvn -B test --file pom.xml

      - name: Sonarqube scan
        uses : SonarSource/sonarqube-scan-action@v5.2.0
        env: 
          SONAR_TOKEN: ${{secrets.SONAR_TOKEN}}
          SONAR_HOST_URL: ${{vars.SONAR_HOST_URL}}

      
      - name: Build with Maven
        run: mvn clean package --file pom.xml

      - name: Prepare jar file
        run: mkdir staging && cp target/*.jar staging
        
      - name: Upload jar file
        uses: actions/upload-artifact@v4
        with:
          name: jar-file
          path: staging
        
      - name: Set image tags
        id: vars
        run: |
          echo "TIMESTAMP=$(date +'%Y%m%d%H%M%S')" >> $GITHUB_ENV
          echo "SHORT_SHA=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
     
  docker-deploy:
    needs: [depchecktest, build-deploy]
    runs-on: ubuntu-latest
    steps: 
    
      - name: Checkout Code
        uses: actions/checkout@v4 
      
      - name: Set image tags
        id: vars
        run: |
          echo "TIMESTAMP=$(date +'%Y%m%d%H%M%S')" >> $GITHUB_ENV
          echo "SHORT_SHA=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
      
      - name: Download jar file
        uses: actions/download-artifact@v4
        with:
          name: jar-file
          path: staging
          
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:  
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
  
      - name: Build Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          load: true
          push: false
          tags: |
            ${{ secrets.DOCKER_HUB_USERNAME }}/petclinic:${{ env.TIMESTAMP }}
            ${{ secrets.DOCKER_HUB_USERNAME }}/petclinic:${{ env.SHORT_SHA }}
            ${{ secrets.DOCKER_HUB_USERNAME }}/petclinic:latest

      - name : Anchore image scan 
        uses: anchore/scan-action@v6.3.0
        with:
          image: ${{ secrets.DOCKER_HUB_USERNAME }}/petclinic:latest
          output-format: json
          output-file: anchore-scan-results.json
          fail-build: true
        if: always()

  
      - name: Upload anchore scan results
        uses: actions/upload-artifact@v4
        with:
          name: anchore-scan-report
          path: anchore-scan-results.json



      - name : Push docker Image 
        run: |
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/petclinic:${{ env.TIMESTAMP }}
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/petclinic:${{ env.SHORT_SHA }}
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/petclinic:latest
   